AWSTemplateFormatVersion: '2010-09-09'
Description: IAM roles for EC2 (SSM) and Lambda

Parameters:
  ProjectName:
    Type: String
    Default: lumera-demo
  Environment:
    Type: String
    Default: dev
  ArtifactBucketName:
    Type: String
    Default: ''

Resources:
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-ec2-role

  EC2InstanceRolePolicyS3Read:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-${Environment}-ec2-s3-read
      Roles:
        - !Ref EC2InstanceRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource: !Sub arn:aws:s3:::${ProjectName}-${Environment}-artifacts-${AWS::AccountId}
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource: !Sub arn:aws:s3:::${ProjectName}-${Environment}-artifacts-${AWS::AccountId}/*

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [!Ref EC2InstanceRole]

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaEc2DescribeAndS3Write
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeInstances
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub arn:aws:s3:::${ArtifactBucketName}/logs/*
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-lambda-role

Outputs:
  InstanceProfileArn:
    Value: !GetAtt EC2InstanceProfile.Arn
    Export:
      Name: !Sub ${ProjectName}-${Environment}-EC2InstanceProfileArn
  InstanceProfileName:
    Value: !Ref EC2InstanceProfile
    Export:
      Name: !Sub ${ProjectName}-${Environment}-EC2InstanceProfileName
  LambdaRoleArn:
    Value: !GetAtt LambdaRole.Arn
    Export:
      Name: !Sub ${ProjectName}-${Environment}-LambdaRoleArn